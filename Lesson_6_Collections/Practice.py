"""
Вам предоставлен список английских слов и словарь соответствия символов строки коду азбуки Морзе.

Создайте функцию morse_encode(), которая принимает словарь с азбукой Морзе и слово для кодирования и возвращает его
представление в азбуке Морзе с использованием пробелов между символами.
"""

# morse = {"0": "-----", "1": ".----", "2": "..---", "3": "...--", "4": "....-", "5": ".....", "6": "-....",
#          "7": "--...", "8": "---..", "9": "----.", "a": ".-", "b": "-...", "c": "-.-.", "d": "-..", "e": ".",
#          "f": "..-.", "g": "--.", "h": "....", "i": "..", "j": ".---", "k": "-.-", "l": ".-..", "m": "--",
#          "n": "-.", "o": "---", "p": ".--.", "q": "--.-", "r": ".-.", "s": "...", "t": "-", "u": "..-",
#          "v": "...-", "w": ".--", "x": "-..-", "y": "-.--", "z": "--..", ".": ".-.-.-", ",": "--..--",
#          "?": "..--..", "!": "-.-.--", "-": "-....-", "/": "-..-.", "@": ".--.-.", "(": "-.--.", ")": "-.--.-"}
# words_to_decode = ['java', 'python', 'ruby', 'php', 'fortran', 'javascript', 'kotlin', 'swift', 'basic', 'pascal']
# words_to_encode = [".--- .- ...- .-", ".--. -.-- - .... --- -.", ".-. ..- -... -.--", ".--. .... .--.",
#                    "..-. --- .-. - .-. .- -.", ".--- .- ...- .- ... -.-. .-. .. .--. -", "-.- --- - .-.. .. -.",
#                    "... .-- .. ..-. -", "-... .- ... .. -.-.", ".--. .- ... -.-. .- .-.. "]
# for word in words_to_decode:
#     string_1 = ''
#     for char in word:
#         string_1 += morse[char] + ' '
#     print(string_1)
# morse_reversed = {v: k for k, v in morse.items()}
# for word in words_to_encode:
#     word = word.split()
#     string_1 = ''
#     for char in word:
#         string_1 += morse_reversed[char]
#     print(string_1)

"""
У вас есть два списка чисел. Вам нужно создать множества из этих списков и найти:

Все уникальные числа (объединение множеств).
Числа, которые есть в обоих списках (пересечение множеств).
Числа, которые есть в первом списке, но нет во втором (разность множеств).
"""
# list1 = [1, 2, 3, 4, 5]
# list2 = [3, 4, 5, 6, 7]
# print(list(set(list1) | set(list2)))
# print(list(set(list1) & set(list2)))
# print(list(set(list1) - set(list2)))
"""
У вас есть два множества чисел. Нужно выполнить все возможные операции и вывести результат:

Объединение множеств.
Пересечение множеств.
Разность множеств
Симметрическая разность множеств.
"""
# A = {1, 2, 3, 4, 5}
# B = {4, 5, 6, 7, 8}
# print(A | B)
# print(A & B)
# print(A - B)
# print(A ^ B)
"""
Напишите программу, которая принимает строку и подсчитывает, сколько раз каждое слово встречается в тексте. Выведите 
результат в виде словаря, где ключами являются слова, а значениями — их количество.
"""
# text = "hello world hello Python world hello"
# text = text.split()
# dictionary = {}
# for word in text:
#     if word in dictionary:# if dictionary.get(word):
#         dictionary[word] += 1
#     else:
#         dictionary[word] = 1
# print(dictionary)

"""
У вас есть словарь, где ключи — это имена студентов, а значения — их оценки. Напишите программу, которая инвертирует 
этот словарь, т.е. делает значения ключами, а ключи значениями.
"""
# students_scores = {"Alice": 85, "Bob": 92, "Charlie": 78}
"""
Вывести имя человека, который набрал максимальный бал по математике из списка словарей.
Вывести средний балл по английскому
"""
# students = [
#     {'name': 'Alice', 'math': 90, 'english': 85},
#     {'name': 'Bob', 'math': 85, 'english': 92},
#     {'name': 'Charlie', 'math': 88}
# ]
# m = 0
# s = ''
# eng_lst = []
# for student in students:
#     score = student['math']
#     if score > m:
#         m = score
#         s = student['name']
#     if student.get('english'):
#         eng_lst.append(student['english'])
# print(s)
# print(sum(eng_lst) / len(eng_lst))

"""
Реализуйте процесс игры "Скрабл" в терминале. Гугл в помощь. )
"""
# letters = {1: 'AEIOULNSTR',
#            2: 'DG',
#            3: 'BCMP',
#            4: 'FHVWY',
#            5: 'K',
#            8: 'JZ',
#            10: 'QZ'
#            }
# word = input().upper()
# for i in word:

"""
Напишите программу, которая принимает список строк и создает словарь, где ключ - это первая буква, а значение - список 
строк, начинающихся на эту букву.
words = ['apple', 'banana', 'apricot', 'blueberry', 'cherry']
# Результат: {'a': ['apple', 'apricot'], 'b': ['banana', 'blueberry'], 'c': ['cherry']}
"""
# words = ['apple', 'banana', 'apricot', 'blueberry', 'cherry']
# dictionary = {}
# lst = []
# for word in words:
#     if dictionary.get(word[0]):
#         lst.append(word)
# print(dictionary)

"""
Создайте два словаря с целыми числами и напишите функцию, которая объединяет их. Если ключи совпадают, значения 
должны складываться.
"""
dict1 = {'a': 1, 'b': 2}
dict2 = {'b': 3, 'c': 4}
dict3 = {}
for key, value in dict1.items():
    dict3[key] = value
for key, value in dict2.items():
    if key in dict3:
        dict3[key] += value
    else:
        dict3[key] = value
print(dict3)
"""
Задача 3: Инвертирование словаря
Напишите функцию, которая принимает словарь и возвращает новый словарь, где ключи и значения поменяны местами. Предположите, что значения уникальны.

Пример:

input_dict = {'a': 1, 'b': 2, 'c': 3}
output = {1: 'a', 2: 'b', 3: 'c'}
Задача 4: Фильтрация словаря
Напишите функцию, которая принимает словарь и число. Функция должна возвращать новый словарь, содержащий только те элементы, значения которых больше заданного числа.

Пример:

input_dict = {'a': 1, 'b': 3, 'c': 5}
threshold = 2
output = {'b': 3, 'c': 5}
Задача 5: Слияние списков в словарь
У вас есть два списка: один с ключами, другой со значениями. Напишите функцию, которая создает словарь, используя элементы первого списка как ключи, а элементы второго списка как значения.

Пример:

keys = ['a', 'b', 'c']
values = [1, 2, 3]
output = {'a': 1, 'b': 2, 'c': 3}
Задача 6: Поиск максимального значения
Напишите функцию, которая принимает словарь и возвращает ключ, соответствующий максимальному значению.

Пример:

input_dict = {'a': 1, 'b': 5, 'c': 3}
output = 'b'  # максимальное значение 5
Задача 7: Группировка по значению
Напишите функцию, которая принимает список словарей и группирует их по какому-либо ключу. Например, если у вас есть список словарей с информацией о людях, вы можете группировать их по возрасту.

Пример:

people = [
    {'name': 'Alice', 'age': 30},
    {'name': 'Bob', 'age': 25},
    {'name': 'Charlie', 'age': 30}
]
output = {30: [{'name': 'Alice', 'age': 30}, {'name': 'Charlie', 'age': 30}], 25: [{'name': 'Bob', 'age': 25}]}
Задача 8: Удаление дубликатов
Напишите функцию, которая принимает список и возвращает словарь, в котором ключами являются уникальные элементы списка, а значениями — количество их вхождений.

Пример:

input_list = ['apple', 'banana', 'apple', 'orange', 'banana']
output = {'apple': 2, 'banana': 2, 'orange': 1}
Попробуйте реализовать эти задачи, и если возникнут вопросы, не стесняйтесь спрашивать!
"""
