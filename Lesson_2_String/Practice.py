"""
██╗███╗   ██╗██████╗ ███████╗██╗  ██╗███████╗███████╗
██║████╗  ██║██╔══██╗██╔════╝╚██╗██╔╝██╔════╝██╔════╝
██║██╔██╗ ██║██║  ██║█████╗   ╚███╔╝ █████╗  ███████╗
██║██║╚██╗██║██║  ██║██╔══╝   ██╔██╗ ██╔══╝  ╚════██║
██║██║ ╚████║██████╔╝███████╗██╔╝ ██╗███████╗███████║
╚═╝╚═╝  ╚═══╝╚═════╝ ╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝

███████╗██╗     ██╗ ██████╗███████╗███████╗
██╔════╝██║     ██║██╔════╝██╔════╝██╔════╝
███████╗██║     ██║██║     █████╗  ███████╗
╚════██║██║     ██║██║     ██╔══╝  ╚════██║
███████║███████╗██║╚██████╗███████╗███████║
╚══════╝╚══════╝╚═╝ ╚═════╝╚══════╝╚══════╝

"""

"""
0. Взять по индесу первую, последнюю букву из строки.
"""
# s = 'AbraCadabI'
# print(s[0])
# print(s[-1])

"""
1. Дана строка. Вывести её без первой и последней буквы.
"""
# s = "abcABCabc"
# print(s[1:-1])
"""
2. Из этой же строки вывести все буквы "a" с помощью среза.
"""
# print(s[0::3])
"""
3. Из этой же строки вывести все буквы "c" с помощью среза".
"""
# print(s[2::3])
"""
4. Напечатать эту строку отзеркаленной.
"""
# print(s[::-1])
"""
5. Дан кортеж, сделать срез, чтобы остались только элементы с четными индексами.
"""
# t = ('a01', 'b02', 'c03', 'd04', 'e05', 'f06', 'j07')
# print(t[1::2])
"""
6. Из этого же кортежа сделать срез, чтобы остались элементы только с НЕчетными индексами.
"""
# print(t[0::2])
"""
7. Сделать срез элементов с четными индексами, 
сделать срез элементов с НЕчетными индексами и объединить два среза в том же порядке.
"""
# print(t[1::2] + (t[0::2]))
"""
8. Вводится строка из двух слов, нужно поменять слова местами в строке.
"""
# s = input()
# i = s.find(" ")
# print(s[i + 1:] + " " + s[:i])

"""
9. Дан список, заменить элемент с индексом 1 на строку 'new socks'
"""
# order = ['milk', 'bread', 'eggs', 'cake']
# order[1] = 'new socks'
# print(order)

"""

nums = [1, 2, 3, 4, 5]
nums[1:3] = [99, 98, 97, 96]
nums стал равен [1, 99, 98, 97, 96, 4, 5]
"""

"""
11. В офисе решили заменить некоторых сотрудников на написанные вами программы.
Вам нужно заменить бухгалтера на "CalculatedBot",
менеджера на "SellerBot",
а охранника на "Securitron".

Есть очевидный способ замены по индексам, однако вот интересный пример,
похожий на предидущее задание.

nums = [1, 2, 3, 4, 5]
nums[::2] = [9, 8, 7]
nums стал равен [9, 2, 8, 4, 7]

Попробуйте разные варианты.
"""
# workers = ['бухгалтер', 'директор', 'менеджер', 'программист', 'охранник']
# workers[0] = 'CalculatedBot'
# workers[2] = 'SellerBot'
# workers[4] = 'Securitron'
# workers[::2] = ['CalculatedBot', 'SellerBot', 'Securitron']
# print(workers)

"""
12. Вводятся два слова, вывести самое длинное.
Функция len поможет.
"""
# s = input()
# i = s.find(" ")
# if len(s[:i]) > len(s[i+1:]):
#     print(s[:i])
# else:
#     print(s[i+1:])
"""
13. Вводится число, проверить, что оно есть в списке lst.
"""
# lst = [2343, 23, 76, 987, 1, -100, 8, -23.4]
# s = float(input())
# if s in lst:
#     print("Введенное число в списке")
# else:
#     print("Введенное число не в списке")
"""
14. Вводится строка, проверить, что первый и последний символ строки одинаковые.
"""
# s = input()
# if s[0] == s[-1]:
#     print("Одинаковые")
# else:
#     print("Не одинаковые")
"""
15. Дана строка в переменной s, вводится число n, нужно
напечатать последние n символов строки s. 
"""
# s = "Hello, I'm Harry, Harry not Potter!"
# n = int(input())
# print(s[len(s)-n:])

"""
16. Дана строка, нужно напечатать два предложения из неё по отдельности.
"""
# s = "Oh my PEP-8. It's index error!"
# i = s.find(".")
# print(s[:i+1])
# print(s[i+2:])
"""
17. Вводится строка, если в ней есть символ нижнего подчеркивания,
то нужно напечатать его индекс.
"""
# s = input()
# i = s.find("_")
# if s[i] in s:
#     print(i)
# else:
#     print("Нет такого символа")
"""
18. Дан список из нулей, нужно заменить все элементы с нечетными индексами на единицы.
Замена среза с шагом поможет (см. предыдущие задания)
"""
# nulls = [0, 0, 0, 0, 0, 0, 0]
# nulls[0::2] = [1, 1, 1, 1]
# print(nulls)
"""
19. Вводится строка, нужно проверить, что первая её половина, равна второй половине.
(учесть что кол-во символов может быть как четным, так и нет)
"""